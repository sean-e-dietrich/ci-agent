#!/usr/bin/env bash

# This script sets up a sandbox environment for the build on the remote docker host.

echo "Setting up remote build environment..."
ssh docker-host whoami
# Cleanup
ssh docker-host "(cd $REMOTE_BUILD_DIR && fin rm -f) || true"
ssh docker-host "sudo rm -rf $REMOTE_BUILD_DIR; mkdir -p $REMOTE_BUILD_DIR"
# Checkout sources
ssh docker-host "cd $REMOTE_BUILD_DIR && git clone --branch="$GIT_BRANCH_NAME" --depth 50 $GIT_REPO_URL . && git reset --hard $GIT_COMMIT_HASH && ls -la"
# Configure sandbox settings
echo "Configuring sandbox settings..."
ssh docker-host "cd $REMOTE_BUILD_DIR && echo COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME | tee -a .docksal/docksal-local.env"
ssh docker-host "cd $REMOTE_BUILD_DIR && echo VIRTUAL_HOST=$DOMAIN | tee -a .docksal/docksal-local.env"
# Basic HTTP Auth
if [[ $HTTP_USER != "" ]] && [[ $HTTP_PASS != "" ]]; then
	ssh docker-host "cd $REMOTE_BUILD_DIR && echo APACHE_BASIC_AUTH_USER=$HTTP_USER | tee -a .docksal/docksal-local.env"
	ssh docker-host "cd $REMOTE_BUILD_DIR && echo APACHE_BASIC_AUTH_PASS=$HTTP_PASS | tee -a .docksal/docksal-local.env"
fi
#echo "Launching fin init..."
#ssh docker-host "cd $REMOTE_BUILD_DIR && fin init"

# Post sandbox URL to Bitbucket build status API
# Note: this happens before the actual sandbox is up and does not reflect the actual sandbox build status,
# just provide an easier way to view the sandbox URL in Bitbucket UI (instead of digging through build logs).
if [[ "${BITBUCKET_REPO_SLUG}" != "" ]] && [[ "${BITBUCKET_API_AUTH}" != "" ]]; then
	echo "Posting sandbox URL to Bitbucket..."

	BUILD_STATUS_PAYLOAD="{\"key\": \"artifacts\", \"state\": \"SUCCESSFUL\", \"name\": \"Sandbox environment\", \"url\": \"${DOMAIN}\"}"
	BITBUCKET_API_URL="https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/commit/${BITBUCKET_COMMIT}/statuses/build"
	curl -sS -H "Content-Type: application/json" -X POST --user "${BITBUCKET_API_AUTH}" -d "${BUILD_STATUS_PAYLOAD}" "${BITBUCKET_API_URL}" >/dev/null
fi

# Post sandbox URL to either Github or Bitbucket Pull Request
# Note: this happens before the actual sandbox is up and does not reflect the actual sandbox build status
if [[ "$CIRCLECI" != "" ]]; then
	if [[ $CIRCLE_REPOSITORY_URL == *"github.com"* ]] && [[ "${GITHUB_TOKEN}" != "" ]] && [[ "${CI_PULL_REQUEST}" != "" ]]; then
		echo "Posting sandbox URL to Github..."
		URL="${CIRCLE_REPOSITORY_URL}/pull/"
		PULL_REQUEST_ID=$(echo $CI_PULL_REQUEST | sed "s#${URL}##g")
		curl -sS -H "Content-Type: application/json" -H "Accept: application/vnd.github.v3.full+json" -H "Authorization: token ${GITHUB_TOKEN}" -X POST --data "{\"body\": \"Sandbox environment: ${DOMAIN}\"}" https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/${PULL_REQUEST_ID}/comments
	elif [[ $CIRCLE_REPOSITORY_URL == *"bitbucket.com"* ]] && [[ "${BITBUCKET_TOKEN}" != "" ]] && [[ "${CI_PULL_REQUEST}" != "" ]]; then
		echo "Posting sandbox URL to Bitbucket..."
		URL="${CIRCLE_REPOSITORY_URL}/pull-requests/"
		PULL_REQUEST_ID=$(echo $CI_PULL_REQUEST | sed "s#${URL}##g")
		curl -sS --user "${BITBUCKET_API_AUTH}" -X POST --data "content=\"Sandbox environment: ${DOMAIN}\"" https://api.bitbucket.org/1.0/repositories/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pullrequests/${PULL_REQUEST_ID}/comments
	fi
fi
